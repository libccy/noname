export namespace Content {
    function emptyEvent(event: any): Promise<void>;
    function changeCharacter(event: any, trigger: any, player: any): Promise<void>;
    function changeSkills(event: any, trigger: any, player: any): Promise<void>;
    function addShownCards(): void;
    function hideShownCards(): void;
    function executeDelayCardEffect(): void;
    function gift(): void;
    function recast(): void;
    function disableEquip(): void;
    function enableEquip(): void;
    function expandEquip(): void;
    function replaceEquip(event: any, trigger: any, player: any): Promise<void>;
    function replaceEquip_old(): void;
    function equip(event: any, trigger: any, player: any): Promise<void>;
    function equip_old(): void;
    function changeGroup(): void;
    function chooseToDebate(): void;
    function delay(): void;
    function chooseCooperationFor(): void;
    function chooseToPlayBeatmap(): void;
    function chooseToMove(): void;
    function showCharacter(): void;
    function removeCharacter(): void;
    function chooseUseTarget(): void;
    function chooseToDuiben(): void;
    function chooseToPSS(): void;
    function cardsDiscard(): void;
    function orderingDiscard(): void;
    function cardsGotoOrdering(): void;
    function cardsGotoSpecial(): void;
    function cardsGotoPile(): void;
    function chooseToEnable(event: import("noname-typings/nonameModules/noname/library/element/gameEvent.js").GameEvent, trigger: import("noname-typings/nonameModules/noname/library/element/gameEvent.js").GameEvent, player: import("noname-typings/nonameModules/noname/library/element/player.js").Player): Promise<void>;
    function chooseToDisable(event: import("noname-typings/nonameModules/noname/library/element/gameEvent.js").GameEvent, trigger: import("noname-typings/nonameModules/noname/library/element/gameEvent.js").GameEvent, player: import("noname-typings/nonameModules/noname/library/element/player.js").Player): Promise<void>;
    function swapEquip(): void;
    function disableJudge(): void;
    function enableJudge(): void;
    function phasing(): void;
    function toggleSubPlayer(): void;
    function exitSubPlayer(): void;
    function callSubPlayer(): void;
    function addExtraTarget(): void;
    function reverseOrder(): void;
    function addJudgeCard(): void;
    function equipCard(): void;
    function gameDraw(): void;
    function phaseLoop(): void;
    function loadPackage(): void;
    function loadMode(event: any): Promise<void>;
    function forceOver(): void;
    function arrangeTrigger(event: any, trigger: any, player: any): Promise<void>;
    function createTrigger(): any;
    function playVideoContent(): void;
    function waitForPlayer(): void;
    function replaceHandcards(): void;
    function replaceHandcardsOL(): void;
    function phase(): void;
    function phase_old(): void;
    function phaseZhunbei(): void;
    function phaseJudge(): void;
    function phaseDraw(): void;
    function phaseUse(): void;
    function phaseDiscard(): void;
    function phaseJieshu(): void;
    function chooseToUse(): void;
    function chooseToRespond(): void;
    function chooseToGive(): void;
    function chooseToDiscard(): void;
    function gaincardMultiple(): void;
    function discardMultiple(): void;
    function chooseToCompareLose(): void;
    function chooseToCompareMeanwhile(): void;
    function chooseToCompareMultiple(): void;
    function chooseToCompare(): void;
    function chooseSkill(): void;
    function discoverCard(): void;
    function chooseButton(): void;
    function chooseCardOL(): void;
    function chooseButtonOL(): void;
    function chooseCard(): void;
    function chooseTarget(): void;
    function chooseCardTarget(): void;
    function chooseControl(): void;
    function chooseBool(): void;
    function chooseDrawRecover(): void;
    function choosePlayerCard(): void;
    function discardPlayerCard(): void;
    function gainPlayerCard(): void;
    function showHandcards(): void;
    function showCards(): void;
    function viewCards(): void;
    function moveCard(): void;
    function useCard(): void;
    function useSkill(): void;
    function draw(): void;
    function discard(): void;
    function loseToDiscardpile(): void;
    function respond(): void;
    function swapHandcards(): void;
    function swapHandcardsx(): void;
    function gainMultiple(): void;
    function gain(): void;
    function addToExpansion(): void;
    function lose(): void;
    function damage(): void;
    function recover(): void;
    function loseHp(): void;
    function doubleDraw(): void;
    function loseMaxHp(): void;
    function gainMaxHp(): void;
    function changeHp(): void;
    function changeHujia(): void;
    function dying(): void;
    function die(): void;
    function addJudge(event: any, trigger: any, player: any): Promise<void>;
    function addJudge_old(): void;
    function judge(): void;
    function turnOver(): void;
    function link(): void;
    function chooseToGuanxing(): void;
    function chooseToMove_new(): void;
}
